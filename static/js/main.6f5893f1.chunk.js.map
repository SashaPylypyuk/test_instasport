{"version":3,"sources":["api/clubs.js","components/Clubs.jsx","App.jsx","index.js"],"names":["API_URL","a","fetch","then","res","json","Clubs","clubs","className","map","club","href","link","city","title","title_short","src","logo","alt","activity","App","useState","setClubs","filteredClubs","setFilteredClubs","setActivities","setSity","isLoaded","setLoaded","filterCity","setFilterCity","filterAct","setFilterAct","length","Promise","resolve","getClubs","rawClubs","act","tempCity","i","push","tempAct","slug","changeActivities","e","value","target","filteredArr","filter","obj","some","o","console","log","changeCity","type","key","cn","onClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6f5893f1.chunk.js","sourcesContent":["const API_URL = 'https://instasport.co/dashboard/api/v1/clubs/';\n\nexport async function getClubs() {\n  return fetch(API_URL).then(res => res.json());\n}\n\n","import React from 'react';\nimport '../App.css';\nimport PropTypes from 'prop-types';\n\nexport function Clubs({ clubs }) {\n  return (\n    <div className=\"clubs\">\n      {clubs.map(club => (\n        <div className=\"club\">\n          <a href={club.link}>\n            <p className=\"club__city\">\n              {club.city.title}\n            </p>\n            <p className=\"club__title\">\n              {club.title_short}\n            </p>\n            <img className=\"club__logo\" src={club.logo} alt=\"Logo of club\" />\n            <ul className=\"club__activities\">\n              {club.activity.map(activity => (\n                <li className=\"club__activity\">\n                  {activity.title}\n                </li>\n              ))}\n            </ul>\n          </a>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nClubs.propTypes = {\n  clubs: PropTypes.arrayOf(\n    PropTypes.shape({\n      logo: PropTypes.string,\n      city: PropTypes.shape({\n        slug: PropTypes.string,\n        title: PropTypes.string,\n      }),\n      link: PropTypes.string,\n      title: PropTypes.string,\n      title_short: PropTypes.string,\n      activity: PropTypes.shape({\n        slug: PropTypes.string,\n        title: PropTypes.string,\n      }),\n    }),\n  ).isRequired,\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport cn from 'classnames';\nimport { getClubs } from './api/clubs';\nimport { Clubs } from './components/Clubs';\n\nfunction App() {\n  const [clubs, setClubs] = useState([]);\n  const [filteredClubs, setFilteredClubs] = useState([clubs]);\n  const [activity, setActivities] = useState([]);\n  const [city, setSity] = useState([]);\n  const [isLoaded, setLoaded] = useState(false);\n  const [filterCity, setFilterCity] = useState('ALL');\n  const [filterAct, setFilterAct] = useState('ALL');\n\n  const loadClubs = () => {\n    Promise.resolve(getClubs()).then((rawClubs) => {\n      setClubs(rawClubs);\n    });\n  };\n\n  if (!clubs.length) {\n    loadClubs();\n  }\n\n  if (clubs.length > 0 && !isLoaded) {\n    setLoaded(true);\n    setFilteredClubs(clubs);\n    const act = ['ALL'];\n    const city = ['ALL'];\n\n    clubs.map((club) => {\n      let tempCity = false;\n\n      for (let i = 0; i < city.length; i++) {\n        if (city[i] === club.city.title) {\n          tempCity = true;\n        }\n      }\n\n      if (!tempCity) {\n        city.push(club.city.title);\n      }\n\n      club.activity.map((a) => {\n        let tempAct = false;\n\n        for (let i = 0; i < act.length; i++) {\n          if (act[i] === a.slug) {\n            tempAct = true;\n          }\n        }\n\n        if (!tempAct) {\n          act.push(a.slug);\n        }\n      });\n    });\n    setSity(city);\n    setActivities(act);\n  }\n\n  const changeActivities = (e) => {\n    const { value } = e.target;\n    const filteredArr = [];\n\n    setFilterAct(value);\n\n    if (value === 'ALL' && filterCity === 'ALL') {\n      setFilteredClubs(clubs);\n\n    } else if (value === 'ALL' && filterCity !== 'ALL') {\n\n      filteredArr.push(clubs.filter(club => club.city.title === filterCity));\n      setFilteredClubs(filteredArr[0]);\n\n    } else if (value !== 'ALL' && filterCity === 'ALL') {\n\n      filteredArr.push(clubs.filter(obj => obj.activity\n        .some(o => o.slug === value)));\n\n      setFilteredClubs(filteredArr[0]);\n\n    } else if (value !== 'ALL' && filterCity !== 'ALL') {\n\n      filteredArr.push(clubs.filter(obj => obj.city.title === filterCity && obj.activity\n        .some(o => o.slug === value)));\n      setFilteredClubs(filteredArr[0]);\n\n    } else {\n      console.log(\"Error in activities\");\n    }\n  };\n\n  const changeCity = (e) => {\n    const { value } = e.target;\n    const filteredArr = [];\n\n    setFilterCity(value);\n\n    if (value === 'ALL' && filterAct === 'ALL') {\n\n      setFilteredClubs(clubs);\n\n    } else if (value === 'ALL' && filterAct !== 'ALL') {\n\n      filteredArr.push(clubs.filter(obj => obj.activity\n        .some(o => o.slug === filterAct)));\n      setFilteredClubs(filteredArr[0]);\n\n    } else if (value !== 'ALL' && filterAct === 'ALL') {\n\n      filteredArr.push(clubs.filter(club => club.city.title === value));\n      setFilteredClubs(filteredArr[0]);\n\n    } else if (value !== 'ALL' && filterAct !== 'ALL') {\n\n      filteredArr.push(clubs.filter(obj => obj.city.title === value && obj.activity\n        .some(o => o.slug === filterAct)));\n      setFilteredClubs(filteredArr[0]);\n\n    } else {\n      console.log(\"Error in city\");\n    }\n\n  };\n\n  console.log(city);\n  console.log(filteredClubs);\n\n  return (\n    <>\n      <h1>\n        Instasport\n      </h1>\n      {clubs.length ? (\n        <>\n          {city.map(city => (\n            <button\n              value={city}\n              type=\"button\"\n              key={city}\n              className={cn('clubs__button--city', 'button',\n                { 'clubs__button--active': city === filterCity })}\n              onClick={changeCity}\n            >\n              {city}\n            </button>\n          ))}\n          <hr />\n          {activity.map(activity => (\n            <button\n              value={activity}\n              onClick={changeActivities}\n              className={cn('clubs__button--activities', 'button',\n                { 'clubs__button--active': activity === filterAct })}\n              type=\"button\"\n              key={activity}\n            >\n              {activity}\n            </button>\n          ))}\n          <Clubs clubs={filteredClubs} />\n        </>\n      ) : (\n        <h1>\n          Loading ...\n        </h1>\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}