{"version":3,"sources":["api/clubs.js","components/Clubs.jsx","App.jsx","index.js"],"names":["API_URL","a","fetch","then","res","json","Clubs","clubs","className","map","club","href","link","city","title","src","logo","alt","activity","App","useState","setClubs","filteredClubs","setFilteredClubs","setActivities","setSity","isLoaded","setLoaded","filterCity","setFilterCity","filterAct","setFilterAct","length","Promise","resolve","getClubs","rawClubs","act","tempCity","i","push","tempAct","slug","changeActivities","e","value","target","filteredArr","filter","obj","some","o","console","log","changeCity","type","key","cn","onClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e2da8ab3.chunk.js","sourcesContent":["const API_URL = 'https://instasport.co/dashboard/api/v1/clubs/';\n\nexport async function getClubs() {\n  return fetch(API_URL).then(res => res.json());\n}\n\n","import React from 'react';\nimport '../App.css';\nimport PropTypes from 'prop-types';\n\nexport function Clubs({ clubs }) {\n  return (\n    <div className=\"clubs\">\n      {clubs.map(club => (\n        <div className=\"club\">\n          <a href={club.link}>\n            <p className=\"club__city\">\n              {club.city.title}\n            </p>\n            {/* <p className=\"club__title\">\n              {club.title_short}\n            </p> */}\n            <img className=\"club__logo\" src={club.logo} alt=\"Logo of club\" />\n            <ul className=\"club__list\">\n              {club.activity.map(activity => (\n                <li className=\"club__list--item\">\n                  {activity.title}\n                </li>\n              ))}\n            </ul>\n          </a>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nClubs.propTypes = {\n  clubs: PropTypes.arrayOf(\n    PropTypes.shape({\n      logo: PropTypes.string,\n      city: PropTypes.shape({\n        slug: PropTypes.string,\n        title: PropTypes.string,\n      }),\n      link: PropTypes.string,\n      title: PropTypes.string,\n      title_short: PropTypes.string,\n      activity: PropTypes.shape({\n        slug: PropTypes.string,\n        title: PropTypes.string,\n      }),\n    }),\n  ).isRequired,\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport cn from 'classnames';\nimport { getClubs } from './api/clubs';\nimport { Clubs } from './components/Clubs';\n\nfunction App() {\n  const [clubs, setClubs] = useState([]);\n  const [filteredClubs, setFilteredClubs] = useState([clubs]);\n  const [activity, setActivities] = useState([]);\n  const [city, setSity] = useState([]);\n  const [isLoaded, setLoaded] = useState(false);\n  const [filterCity, setFilterCity] = useState('ALL');\n  const [filterAct, setFilterAct] = useState('ALL');\n\n  const loadClubs = () => {\n    Promise.resolve(getClubs()).then((rawClubs) => {\n      setClubs(rawClubs);\n    });\n  };\n\n  if (!clubs.length) {\n    loadClubs();\n  }\n\n  if (clubs.length > 0 && !isLoaded) {\n    setLoaded(true);\n    setFilteredClubs(clubs);\n    const act = ['ALL'];\n    const city = ['ALL'];\n\n    clubs.map((club) => {\n      let tempCity = false;\n\n      for (let i = 0; i < city.length; i++) {\n        if (city[i] === club.city.title) {\n          tempCity = true;\n        }\n      }\n\n      if (!tempCity) {\n        city.push(club.city.title);\n      }\n\n      club.activity.map((a) => {\n        let tempAct = false;\n\n        for (let i = 0; i < act.length; i++) {\n          if (act[i] === a.slug) {\n            tempAct = true;\n          }\n        }\n\n        if (!tempAct) {\n          act.push(a.slug);\n        }\n      });\n    });\n    setSity(city);\n    setActivities(act);\n  }\n\n  const changeActivities = (e) => {\n    const { value } = e.target;\n    const filteredArr = [];\n\n    setFilterAct(value);\n\n    if (value === 'ALL' && filterCity === 'ALL') {\n      setFilteredClubs(clubs);\n    } else if (value === 'ALL' && filterCity !== 'ALL') {\n      filteredArr.push(clubs.filter(club => club.city.title === filterCity));\n      setFilteredClubs(filteredArr[0]);\n    } else if (value !== 'ALL' && filterCity === 'ALL') {\n      filteredArr.push(clubs.filter(obj => obj.activity\n        .some(o => o.slug === value)));\n\n      setFilteredClubs(filteredArr[0]);\n    } else if (value !== 'ALL' && filterCity !== 'ALL') {\n      filteredArr.push(clubs.filter(obj => obj.city.title === filterCity && obj.activity\n        .some(o => o.slug === value)));\n      setFilteredClubs(filteredArr[0]);\n    } else {\n      console.log('Error in activities');\n    }\n  };\n\n  const changeCity = (e) => {\n    const { value } = e.target;\n    const filteredArr = [];\n\n    setFilterCity(value);\n\n    if (value === 'ALL' && filterAct === 'ALL') {\n      setFilteredClubs(clubs);\n    } else if (value === 'ALL' && filterAct !== 'ALL') {\n      filteredArr.push(clubs.filter(obj => obj.activity\n        .some(o => o.slug === filterAct)));\n      setFilteredClubs(filteredArr[0]);\n    } else if (value !== 'ALL' && filterAct === 'ALL') {\n      filteredArr.push(clubs.filter(club => club.city.title === value));\n      setFilteredClubs(filteredArr[0]);\n    } else if (value !== 'ALL' && filterAct !== 'ALL') {\n      filteredArr.push(clubs.filter(obj => obj.city.title === value && obj.activity\n        .some(o => o.slug === filterAct)));\n      setFilteredClubs(filteredArr[0]);\n    } else {\n      console.log('Error in city');\n    }\n  };\n\n  console.log(city);\n  console.log(filteredClubs);\n\n  return (\n    <>\n      <h1 className=\"header__text\">\n        Instasport\n      </h1>\n\n      {clubs.length ? (\n        <>\n          <div className=\"header__section\">\n            <p className=\"header__title\">\n              City\n            </p>\n            {city.map(city => (\n              <button\n                value={city}\n                type=\"button\"\n                key={city}\n                className={cn('clubs__button--city', 'button',\n                  { 'clubs__button--active': city === filterCity })}\n                onClick={changeCity}\n              >\n                {city}\n              </button>\n            ))}\n          </div>\n          <div className=\"header__section\">\n            <p className=\"header__title\">\n              Activities\n            </p>\n            {activity.map(activity => (\n              <button\n                value={activity}\n                onClick={changeActivities}\n                className={cn('clubs__button--activities', 'button',\n                  { 'clubs__button--active': activity === filterAct })}\n                type=\"button\"\n                key={activity}\n              >\n                {activity}\n              </button>\n            ))}\n          </div>\n\n          <Clubs clubs={filteredClubs} />\n        </>\n      ) : (\n\n        <>\n        <h1 className=\"placeholder\">\n          Loading ...\n        </h1>\n        </>\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}